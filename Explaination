The board is represented as a 2D array of 0's having dimensions 10*10
The upper border is denoted by numbers 1-10
The leftmost border is denoted by letters A-J

  1 2 3 4 5 6 7 8 9 10
A 0 0 0 0 0 0 0 0 0 0
B 0 0 0 0 0 0 0 0 0 0
C 0 0 0 0 0 0 0 0 0 0
D 0 0 0 0 0 0 0 0 0 0
E 0 0 0 0 0 0 0 0 0 0
F 0 0 0 0 0 0 0 0 0 0
G 0 0 0 0 0 0 0 0 0 0
H 0 0 0 0 0 0 0 0 0 0
I 0 0 0 0 0 0 0 0 0 0
J 0 0 0 0 0 0 0 0 0 0

Both players (the computer and the user) will dispose of 3 airplanes represented as 2D arrays

Position 1      Position 2      Position 3      Position 4

0 0 n 0 0         0 0 n 0       0 n n n 0       0 n 0 0
n n n n n         n 0 n 0       0 0 n 0 0       0 n 0 n
0 0 n 0 0         n n n n       n n n n n       n n n n
0 n n n 0         n 0 n 0       0 0 n 0 0       0 n 0 n
                  0 0 n 0                       0 n 0 0

where n belongs to [1, 2, 3] and they can be placed in any of the 4 positions above

The computer's planes will be placed randomly on the board
The user has to choose where their planes will be placed

Example:
    Computer's board
          1 2 3 4 5 6 7 8 9 10
        A 0 0 1 0 0 0 0 0 2 0
        B 1 1 1 1 1 0 2 0 2 0
        C 0 0 1 0 0 0 2 2 2 2
        D 0 1 1 1 0 0 2 0 2 0
        E 0 0 0 0 0 0 0 0 2 0
        F 0 0 0 0 0 0 0 0 0 0
        G 0 0 3 3 3 0 0 0 0 0
        H 0 0 0 3 0 0 0 0 0 0
        I 0 3 3 3 3 3 0 0 0 0
        J 0 0 0 3 0 0 0 0 0 0

    User's board
          1 2 3 4 5 6 7 8 9 10
        A 0 0 0 0 0 0 0 1 0 0
        B 0 0 0 0 0 0 0 1 0 1
        C 0 0 0 0 0 0 1 1 1 1
        D 0 0 0 0 0 0 0 1 0 1
        E 0 0 0 0 0 0 0 1 0 0
        F 0 0 0 0 0 0 0 0 0 0
        G 0 0 2 0 0 0 3 3 3 0
        H 2 2 2 2 2 0 0 3 0 0
        I 0 0 2 0 0 3 3 3 3 3
        J 0 2 2 2 0 0 0 3 0 0


    The following sequence declares 4 planes, but only a, b and c will be added to the board since d would overlap another plane

        a_plane = plane.Plane(1)
        b_plane = plane.Plane(2)
        c_plane = plane.Plane(3)
        d_plane = plane.Plane(4)
        board = Board()
        a_plane.rotate_right()
        b_plane.rotate_left()

        board.add_plane("A1", a_plane)
        board.add_plane("B5", b_plane)
        board.add_plane("G1", c_plane)
        board.add_plane('F2', d_plane)
        for _ in range(0, 11):
            print(f"{board.get_board()[_][0]} {board.get_board()[_][1]} {board.get_board()[_][2]} {board.get_board()[_][3]} {board.get_board()[_][4]} {board.get_board()[_][5]} {board.get_board()[_][6]} {board.get_board()[_][7]} {board.get_board()[_][8]} {board.get_board()[_][9]} {board.get_board()[_][10]}")

    The output is:

          1 2 3 4 5 6 7 8 9 10
        A 0 0 1 0 0 0 0 0 0 0
        B 1 0 1 0 0 2 0 0 0 0
        C 1 1 1 1 0 2 0 2 0 0
        D 1 0 1 0 2 2 2 2 0 0
        E 0 0 1 0 0 2 0 2 0 0
        F 0 0 0 0 0 2 0 0 0 0
        G 0 0 3 0 0 0 0 0 0 0
        H 3 3 3 3 3 0 0 0 0 0
        I 0 0 3 0 0 0 0 0 0 0
        J 0 3 3 3 0 0 0 0 0 0
